// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id       Int    @id @unique @default(autoincrement()) @db.UnsignedTinyInt
  userId   String @unique
  password String
}

model Post {
  id             Int             @id @unique @default(autoincrement())
  uuid           String          @unique
  url            String          @unique
  title          String
  description    String
  thumbnailPath  String?
  content        String          @db.MediumText
  isPrivate      Boolean
  hit            Int?            @default(0)
  like           Int?            @default(0)
  shared         Int?            @default(0)
  tags           Post_Tag[]
  series         Series?         @relation(fields: [seriesId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  seriesId       Int?
  createdAt      DateTime        @default(now())
  updateAt       DateTime        @updatedAt
  tempPostedPost TempPostedPost?
}

model TempPostedPost {
  id            Int     @id @unique @default(autoincrement())
  uuid          String  @unique
  url           String  @unique
  title         String
  description   String
  thumbnailPath String?
  content       String  @db.MediumText
  isPrivate     Boolean
  hit           Int?    @default(0)
  like          Int?    @default(0)
  shared        Int?    @default(0)
  tags          String?
  series        Int?
  Post          Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId        Int     @unique
}

model TempPost {
  id            Int      @id @unique @default(autoincrement())
  uuid          String   @unique
  title         String
  content       String   @db.MediumText
  thumbnailPath String?
  tags          String?
  createdAt     DateTime @default(now())
}

model Tag {
  name  String     @id @unique
  posts Post_Tag[]
}

model Post_Tag {
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId     Int
  tag        Tag      @relation(fields: [tagName], references: [name], onDelete: Cascade, onUpdate: Cascade)
  tagName    String
  assignedAt DateTime @default(now())

  @@id([postId, tagName])
}

model Series {
  id            Int      @id @unique @default(autoincrement())
  name          String   @unique
  thumbnailPath String?
  url           String
  createdAt     DateTime @default(now())
  posts         Post[]
}
